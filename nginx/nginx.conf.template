# ==========================================
# NGINX Configuration Template
# Stage 3 – Blue/Green Observability + Alerts
# ==========================================

# Main HTTP context (required!)
http {
    # --------------------------------------
    # Custom log format
    # --------------------------------------
    log_format bluegreen '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $body_bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         'pool="$http_x_app_pool" '
                         'release="$http_x_release_id" '
                         'upstream_status="$upstream_status" '
                         'upstream_addr="$upstream_addr" '
                         'request_time=$request_time '
                         'upstream_response_time=$upstream_response_time '
                         'ua="$http_user_agent"';

    # Save logs to file for watcher
    access_log /var/log/nginx/access.log bluegreen;
    error_log /var/log/nginx/error.log warn;

    # --------------------------------------
    # Upstream configuration (filled by env vars)
    # --------------------------------------
    upstream backend_upstream {
        # PRIMARY (active) pool
        server ${PRIMARY_HOST}:${APP_PORT} max_fails=1 fail_timeout=2s;
        # BACKUP pool – used only when primary fails
        server ${BACKUP_HOST}:${APP_PORT} backup;
    }

    # --------------------------------------
    # Server block
    # --------------------------------------
    server {
        listen 8080;
        server_name _;

        proxy_connect_timeout 1s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;

        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 10s;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;

            proxy_pass http://backend_upstream;
        }

        location = /_nginx_health {
            return 200 "ok\n";
        }
    }
}
